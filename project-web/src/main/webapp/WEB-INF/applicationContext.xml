<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    <context:annotation-config/>
    <context:component-scan base-package="adminService"/>
    <!-- jndi is used for this way ,the configuration is configured in glass fish localhost :4848-->
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="jdbc/project"/>
    </bean>
    <!--this is traditional way to connect database ,jndi is better-->
    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
    <!--<property name="driverClassName" value="org.postgresql.Driver"/>-->
    <!--<property name="url" value="jdbc:postgresql://localhost:5432/project"/>-->
    <!--<property name="username" value="postgres"/>-->
    <!--<property name="password" value="juswei"/>-->
    <!--</bean>-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.PostgreSQLDialect
                </prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.jdbc.batch_size">20</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
            </props>
        </property>
        <property name="packagesToScan" value="domain"/>
    </bean>
    <!--<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">-->
    <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->
    <!--<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">-->
    <!--<property name="transactionManager" ref="transactionManager"/>-->
    <!--</bean>-->

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate" abstract="false">
        <property name="sessionFactory" ref="sessionFactory">
        </property>
    </bean>
</beans>

